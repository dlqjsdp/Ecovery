<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    MemberMapper.xml
    - com.ecovery.mapper.MemberMapper 인터페이스와 연결되는 MyBatis 매퍼 XML 파일
    - 회원(MemberVO) 관련 SQL 쿼리 정의
-->
<mapper namespace="com.ecovery.mapper.MemberMapper">

    <!--
        resultMap: SQL 결과를 MemberVO 객체에 매핑하는 설정
        - 컬럼명과 자바 필드명이 다를 경우 사용 (예: created_at → createdAt)
        - ENUM(Role)도 기본 타입으로 처리 가능
    -->
    <resultMap id="memberMap" type="com.ecovery.domain.MemberVO">
        <id property="memberId" column="member_id"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!--
            회원 등록 쿼리
            - useGeneratedKeys: 자동 증가된 PK 값을 memberId에 주입
            - keyProperty는 VO의 필드명과 정확히 일치해야 함 (memberId)
            - ⚠ 오타 주의: 현재 memberid → memberId (대소문자 일치)
        -->
    <insert id="insertMember" parameterType="com.ecovery.domain.MemberVO" useGeneratedKeys="true" keyProperty="memberId">
        insert into member(
            email, password, nickname
        )
        values (
            #{email}, #{password}, #{nickname}
        )
    </insert>

    <!--
        회원 정보 수정
        - 닉네임과 비밀번호만 변경 가능
        - memberId 기준으로 수정
    -->
    <update id="updateMember" parameterType="com.ecovery.domain.MemberVO">
        update member
        set nickname = #{nickname},
            password = #{password}
        where member_id = #{memberId}
    </update>

    <!--
        회원 번호(PK)로 조회
    -->
    <select id="findByMemberId" resultType="com.ecovery.domain.MemberVO">
        select * from member where member_id = #{memberId}
    </select>

    <!--
        이메일로 회원 조회
        - 로그인 등에서 사용
    -->
    <select id="findByEmail" resultType="com.ecovery.domain.MemberVO">
        select * from member where email = #{email}
    </select>

    <!--
        닉네임으로 회원 조회
        - 로그인 등에서 사용
    -->
    <select id="findByNickname" resultType="com.ecovery.domain.MemberVO">
        select * from member where nickname = #{nickname}
    </select>

    <!--
        전체 회원 목록 조회
        - resultMap으로 MemberVO 리스트 반환
    -->
    <select id="findAllMembers" resultType="com.ecovery.domain.MemberVO">
        select * from member
    </select>

</mapper>
