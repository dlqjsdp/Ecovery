spring.application.name=firstproject

# ===============================
# H2 Database 설정
# ===============================

# H2 데이터베이스에 연결할 JDBC URL (메모리 기반 DB) - 재실행 시 데이터 날라감
# spring.datasource.url=jdbc:h2:mem:testdb

# H2 데이터베이스에 연결할 JDBC URL (파일 기반 DB) - 재실행해도 데이터가 날라가지 않음
spring.datasource.url=jdbc:h2:file:~/testdb

# JDBC 드라이버 클래스 (H2 데이터베이스용)
spring.datasource.driver-class-name=org.h2.Driver

# H2 기본 사용자 이름 (기본값: sa)
spring.datasource.username=sa

# H2 기본 비밀번호 (기본적으로 비워둠)
spring.datasource.password=

# ===============================
# JPA 설정
# ===============================

# Hibernate가 사용할 데이터베이스 방언 설정 (H2용)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# 애플리케이션 시작 시 DDL 자동 생성/업데이트 설정
# create: 항상 새로 생성, update: 변경된 내용 반영, none: 아무 작업 안 함
spring.jpa.hibernate.ddl-auto=update

# 실행되는 SQL을 콘솔에 출력
spring.jpa.show-sql=true

# 출력되는 SQL을 보기 좋게 정렬
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# H2 콘솔 설정
# ===============================

# 웹 브라우저에서 H2 콘솔 접속 가능하도록 설정
spring.h2.console.enabled=true

# H2 콘솔 접속 경로 (예: http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console

# data.sql, schema 자동 실행하기 위해 기재
# 스프링 부트 2.5 버전부터 data.sql을 사용한 데이터 초기화를 권장하지 않기 때문에 실습 편의상 추가 설정 진행
spring.jpa.defer-datasource-initialization=true
# 메모리 기반이라면 기재하지 않아도 되나 파일 구조라 기재 하였음
spring.sql.init.mode=always

# ===============================
# JPA 로깅 설정
# ===============================
# 디버그 레벨로 쿼리 출력 DEBUG : 모든 정보 출력
# logging.level.org.hibernate.SQL=DEBUG